// <auto-generated />
using System;
using DemoTrabajadoresBackend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DemoTrabajadoresBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231231025849_cambiarLongitudTipoDocumento")]
    partial class cambiarLongitudTipoDocumento
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DemoTrabajadoresBackend.Entitdades.Departamento", b =>
                {
                    b.Property<int>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDepartamento"));

                    b.Property<string>("NombreDepartamento")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.HasKey("IdDepartamento");

                    b.ToTable("Departamento", (string)null);
                });

            modelBuilder.Entity("DemoTrabajadoresBackend.Entitdades.Distrito", b =>
                {
                    b.Property<int>("IdDistrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDistrito"));

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("NombreDistrito")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.HasKey("IdDistrito", "IdProvincia")
                        .HasName("PK_Distrito_1");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Distrito", (string)null);
                });

            modelBuilder.Entity("DemoTrabajadoresBackend.Entitdades.Provincia", b =>
                {
                    b.Property<int>("IdProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProvincia"));

                    b.Property<int>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<string>("NombreProvincia")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.HasKey("IdProvincia");

                    b.HasIndex("IdDepartamento");

                    b.ToTable("Provincia", (string)null);
                });

            modelBuilder.Entity("DemoTrabajadoresBackend.Entitdades.Trabajador", b =>
                {
                    b.Property<int>("IdTrabajador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTrabajador"));

                    b.Property<int?>("IdDistrito")
                        .HasColumnType("int");

                    b.Property<int?>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NroDocumento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("TipoDocumento")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdTrabajador");

                    b.HasIndex("IdDistrito", "IdProvincia");

                    b.ToTable("Trabajador", (string)null);
                });

            modelBuilder.Entity("DemoTrabajadoresBackend.Entitdades.Distrito", b =>
                {
                    b.HasOne("DemoTrabajadoresBackend.Entitdades.Provincia", "Provincia")
                        .WithMany("Distritos")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("DemoTrabajadoresBackend.Entitdades.Provincia", b =>
                {
                    b.HasOne("DemoTrabajadoresBackend.Entitdades.Departamento", "Departamento")
                        .WithMany("Provincias")
                        .HasForeignKey("IdDepartamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("DemoTrabajadoresBackend.Entitdades.Trabajador", b =>
                {
                    b.HasOne("DemoTrabajadoresBackend.Entitdades.Distrito", "Distrito")
                        .WithMany("Trabajadores")
                        .HasForeignKey("IdDistrito", "IdProvincia");

                    b.Navigation("Distrito");
                });

            modelBuilder.Entity("DemoTrabajadoresBackend.Entitdades.Departamento", b =>
                {
                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("DemoTrabajadoresBackend.Entitdades.Distrito", b =>
                {
                    b.Navigation("Trabajadores");
                });

            modelBuilder.Entity("DemoTrabajadoresBackend.Entitdades.Provincia", b =>
                {
                    b.Navigation("Distritos");
                });
#pragma warning restore 612, 618
        }
    }
}
